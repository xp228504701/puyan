<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.py.dao.MasterCertificationMapper">
  <resultMap id="BaseResultMap" type="com.py.bean.MasterCertification">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="master_id" jdbcType="INTEGER" property="masterId" />
    <result column="certification_id" jdbcType="VARCHAR" property="certificationId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="param1" jdbcType="VARCHAR" property="param1" />
    <result column="major_class_id" jdbcType="INTEGER" property="majorClassId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, master_id, certification_id, time, param1, major_class_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from master_certification
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from master_certification
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.py.bean.MasterCertification">
    insert into master_certification (id, master_id, certification_id, 
      time, param1, major_class_id
      )
    values (#{id,jdbcType=INTEGER}, #{masterId,jdbcType=INTEGER}, #{certificationId,jdbcType=VARCHAR}, 
      #{time,jdbcType=TIMESTAMP}, #{param1,jdbcType=VARCHAR}, #{majorClassId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.py.bean.MasterCertification">
    insert into master_certification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="masterId != null">
        master_id,
      </if>
      <if test="certificationId != null">
        certification_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="param1 != null">
        param1,
      </if>
      <if test="majorClassId != null">
        major_class_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="masterId != null">
        #{masterId,jdbcType=INTEGER},
      </if>
      <if test="certificationId != null">
        #{certificationId,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="param1 != null">
        #{param1,jdbcType=VARCHAR},
      </if>
      <if test="majorClassId != null">
        #{majorClassId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.py.bean.MasterCertification">
    update master_certification
    <set>
      <if test="masterId != null">
        master_id = #{masterId,jdbcType=INTEGER},
      </if>
      <if test="certificationId != null">
        certification_id = #{certificationId,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="param1 != null">
        param1 = #{param1,jdbcType=VARCHAR},
      </if>
      <if test="majorClassId != null">
        major_class_id = #{majorClassId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.py.bean.MasterCertification">
    update master_certification
    set master_id = #{masterId,jdbcType=INTEGER},
      certification_id = #{certificationId,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      param1 = #{param1,jdbcType=VARCHAR},
      major_class_id = #{majorClassId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <!--  selectByMasterId  -->
  <select id="selectByMasterId" resultMap="BaseResultMap" parameterType="java.lang.Integer">

    SELECT * FROM master_certification mc WHERE 1=1
      AND mc.master_id = #{masterId,jdbcType=INTEGER}
      GROUP BY mc.major_class_id

  </select>






</mapper>
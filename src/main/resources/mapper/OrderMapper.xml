<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.py.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.py.bean.Order">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="receiver_address" jdbcType="VARCHAR" property="receiverAddress" />
    <result column="receiving_phone" jdbcType="VARCHAR" property="receivingPhone" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="cash_pledge" jdbcType="DOUBLE" property="cashPledge" />
    <result column="fee" jdbcType="DOUBLE" property="fee" />
    <result column="carriage" jdbcType="DOUBLE" property="carriage" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="pay_status" jdbcType="INTEGER" property="payStatus" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="delivery_time" jdbcType="VARCHAR" property="deliveryTime" />
    <result column="receipt_time" jdbcType="VARCHAR" property="receiptTime" />
    <result column="master_id" jdbcType="VARCHAR" property="masterId" />
    <result column="master_phone" jdbcType="VARCHAR" property="masterPhone" />
    <result column="create_time" jdbcType="VARCHAR" property="createTime" />
    <result column="update_time" jdbcType="VARCHAR" property="updateTime" />
    <result column="user_need_id" jdbcType="INTEGER" property="userNeedId" />
    <result column="need_type" jdbcType="INTEGER" property="needType" />
    <result column="param1" jdbcType="VARCHAR" property="param1" />
    <result column="param2" jdbcType="VARCHAR" property="param2" />
  </resultMap>
  <sql id="Base_Column_List">
    order_id, order_no, num, receiver_address, receiving_phone, receiver, cash_pledge, 
    fee, carriage, state, pay_status, user_id, user_name, delivery_time, receipt_time, 
    master_id, master_phone, create_time, update_time, user_need_id, need_type, param1, 
    param2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from `order`
    where order_id = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where order_id = #{orderId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.py.bean.Order">
    insert into `order` (order_id, order_no, num,
      receiver_address, receiving_phone, receiver, 
      cash_pledge, fee, carriage, 
      state, pay_status, user_id, 
      user_name, delivery_time, receipt_time, 
      master_id, master_phone, create_time, 
      update_time, user_need_id, need_type, 
      param1, param2)
    values (#{orderId,jdbcType=INTEGER}, #{orderNo,jdbcType=VARCHAR}, #{num,jdbcType=INTEGER}, 
      #{receiverAddress,jdbcType=VARCHAR}, #{receivingPhone,jdbcType=VARCHAR}, #{receiver,jdbcType=VARCHAR}, 
      #{cashPledge,jdbcType=DOUBLE}, #{fee,jdbcType=DOUBLE}, #{carriage,jdbcType=DOUBLE}, 
      #{state,jdbcType=INTEGER}, #{payStatus,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR}, #{deliveryTime,jdbcType=VARCHAR}, #{receiptTime,jdbcType=VARCHAR}, 
      #{masterId,jdbcType=VARCHAR}, #{masterPhone,jdbcType=VARCHAR}, #{createTime,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=VARCHAR}, #{userNeedId,jdbcType=INTEGER}, #{needType,jdbcType=INTEGER}, 
      #{param1,jdbcType=VARCHAR}, #{param2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.py.bean.Order">
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="num != null">
        num,
      </if>
      <if test="receiverAddress != null">
        receiver_address,
      </if>
      <if test="receivingPhone != null">
        receiving_phone,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="cashPledge != null">
        cash_pledge,
      </if>
      <if test="fee != null">
        fee,
      </if>
      <if test="carriage != null">
        carriage,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="payStatus != null">
        pay_status,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="deliveryTime != null">
        delivery_time,
      </if>
      <if test="receiptTime != null">
        receipt_time,
      </if>
      <if test="masterId != null">
        master_id,
      </if>
      <if test="masterPhone != null">
        master_phone,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="userNeedId != null">
        user_need_id,
      </if>
      <if test="needType != null">
        need_type,
      </if>
      <if test="param1 != null">
        param1,
      </if>
      <if test="param2 != null">
        param2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        #{num,jdbcType=INTEGER},
      </if>
      <if test="receiverAddress != null">
        #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receivingPhone != null">
        #{receivingPhone,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="cashPledge != null">
        #{cashPledge,jdbcType=DOUBLE},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DOUBLE},
      </if>
      <if test="carriage != null">
        #{carriage,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTime != null">
        #{deliveryTime,jdbcType=VARCHAR},
      </if>
      <if test="receiptTime != null">
        #{receiptTime,jdbcType=VARCHAR},
      </if>
      <if test="masterId != null">
        #{masterId,jdbcType=VARCHAR},
      </if>
      <if test="masterPhone != null">
        #{masterPhone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="userNeedId != null">
        #{userNeedId,jdbcType=INTEGER},
      </if>
      <if test="needType != null">
        #{needType,jdbcType=INTEGER},
      </if>
      <if test="param1 != null">
        #{param1,jdbcType=VARCHAR},
      </if>
      <if test="param2 != null">
        #{param2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.py.bean.Order">
    update `order`
    <set>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="num != null">
        num = #{num,jdbcType=INTEGER},
      </if>
      <if test="receiverAddress != null">
        receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      </if>
      <if test="receivingPhone != null">
        receiving_phone = #{receivingPhone,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=VARCHAR},
      </if>
      <if test="cashPledge != null">
        cash_pledge = #{cashPledge,jdbcType=DOUBLE},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DOUBLE},
      </if>
      <if test="carriage != null">
        carriage = #{carriage,jdbcType=DOUBLE},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null">
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="deliveryTime != null">
        delivery_time = #{deliveryTime,jdbcType=VARCHAR},
      </if>
      <if test="receiptTime != null">
        receipt_time = #{receiptTime,jdbcType=VARCHAR},
      </if>
      <if test="masterId != null">
        master_id = #{masterId,jdbcType=VARCHAR},
      </if>
      <if test="masterPhone != null">
        master_phone = #{masterPhone,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=VARCHAR},
      </if>
      <if test="userNeedId != null">
        user_need_id = #{userNeedId,jdbcType=INTEGER},
      </if>
      <if test="needType != null">
        need_type = #{needType,jdbcType=INTEGER},
      </if>
      <if test="param1 != null">
        param1 = #{param1,jdbcType=VARCHAR},
      </if>
      <if test="param2 != null">
        param2 = #{param2,jdbcType=VARCHAR},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.py.bean.Order">
    update `order`
    set order_no = #{orderNo,jdbcType=VARCHAR},
      num = #{num,jdbcType=INTEGER},
      receiver_address = #{receiverAddress,jdbcType=VARCHAR},
      receiving_phone = #{receivingPhone,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=VARCHAR},
      cash_pledge = #{cashPledge,jdbcType=DOUBLE},
      fee = #{fee,jdbcType=DOUBLE},
      carriage = #{carriage,jdbcType=DOUBLE},
      state = #{state,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      delivery_time = #{deliveryTime,jdbcType=VARCHAR},
      receipt_time = #{receiptTime,jdbcType=VARCHAR},
      master_id = #{masterId,jdbcType=VARCHAR},
      master_phone = #{masterPhone,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=VARCHAR},
      user_need_id = #{userNeedId,jdbcType=INTEGER},
      need_type = #{needType,jdbcType=INTEGER},
      param1 = #{param1,jdbcType=VARCHAR},
      param2 = #{param2,jdbcType=VARCHAR}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>



  <select id="selectByPrimary" parameterType="com.py.bean.Order" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from `order` o
    where  1=1
    <if test="orderNo != null">
      And order_no = #{orderNo,jdbcType=VARCHAR}
    </if>
  </select>

  <update id="updateOrderState" parameterType="com.py.bean.Order">
    update `order`
    set
      state = #{state,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}

  </update>



  <!--  订单简单信息 - 师傅端    -->
  <resultMap id="BaseResultSynopsisForMaster" type="com.py.bean.OrderSynopsisMaster">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="order_type" jdbcType="VARCHAR" property="orderType" />
    <result column="receiver" jdbcType="VARCHAR" property="receiver" />
    <result column="receiver_address" jdbcType="VARCHAR" property="receiverAddress" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="delivery_time" jdbcType="VARCHAR" property="deliveryTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>


  <select id="selectOrderByStatusAndMajorClassId" resultMap="BaseResultSynopsisForMaster">
    SELECT
      o.order_no,
      o.delivery_time,
      o.receiver_address,
      o.param1 AS "note",
      smc.major_name AS "order_type"
    FROM
        `order` o
        LEFT JOIN (
        SELECT
            mc.id AS "major_id",
            sc.id AS "small_id",
            mc.`name` AS "major_name"
        FROM
            major_class mc
            LEFT JOIN small_class sc ON sc.major_class = mc.id
        ) smc ON smc.major_id = o.need_type
    WHERE
        1 = 1
        AND o.state = 0
        AND smc.major_id IN
        <foreach  item="majorClassId" collection="array" index="index"  open="(" separator="," close=")">
          #{majorClassId}
        </foreach>
      GROUP BY  o.order_no

  </select>







<!--  订单简单信息 - 小程序    -->
  <resultMap id="BaseResultSynopsis" type="com.py.bean.OrderSynopsis">
    <id column="order_id" jdbcType="INTEGER" property="orderId" />
    <result column="order_no" jdbcType="VARCHAR" property="orderNo" />
    <result column="order_type" jdbcType="VARCHAR" property="orderType" />
    <result column="receiver_address" jdbcType="VARCHAR" property="orderAddress" />
    <result column="delivery_time" jdbcType="VARCHAR" property="orderTime" />
    <result column="state" jdbcType="INTEGER" property="state" />
  </resultMap>
  <select id="selectSynopsisByStatus" parameterType="java.lang.String" resultMap="BaseResultSynopsis">

  SELECT
      oo.order_id,
      sc.order_type,
      oo.order_no,
      oo.receiver_address,
      oo.delivery_time,
      oo.state
  FROM
      `order` oo
      LEFT JOIN (
      SELECT
          mc.`name` AS "order_type",
          sm.id AS "small_class_id"
      FROM
          major_class mc
          LEFT JOIN small_class sm ON sm.major_class = mc.id
      ) sc ON sc.small_class_id = oo.need_type
  WHERE
      1 = 1
      AND oo.state = #{state}
      AND oo.user_id = #{userId}


  </select>









</mapper>